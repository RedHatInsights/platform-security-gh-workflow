# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# The default values used in the docker build commands are the root
# directory '.' and the dockerfile name of 'Dockerfile'. If there is 
# a need to change these do so in your local workflow template and
# change them there.

# This workflow checks out code, builds an image, performs a container image
# vulnerability scan with Anchore's Grype tool, and generates an
# SBOM via Anchore's Syft tool

# For more information on Anchore's container image scanning tool Grype, see
# https://github.com/anchore/grype

# For more information about the Anchore SBOM tool, Syft, see
# https://github.com/anchore/syft

name: ConsoleDot Platform Security Scan - Reusable Workflow 

env: 
  GRYPE_VERSION: "v0.80.1"
  SYFT_VERSION: "v1.12.2"
  GRYPE_ARTIFACTS_DIR: $GRYPE_ARTIFACTS_DIR
  SYFT_ARTIFACTS_DIR: $SYFT_ARTIFACTS_DIR
  SYFT_FORMAT_JSON_PRETTY: true

on:
  workflow_call:
    inputs:
      # Defaults
      dockerbuild_path: 
        description: 'The path where the docker build needs to happen.'
        default: '.'
        required: false
        type: string
      dockerfile_path: 
        description: 'The path of the dockerfile to be scanned.'
        default: '.'
        required: false
        type: string
      dockerfile_name:
        description: 'The filename of the dockerfile to be scanned.'
        default: 'Dockerfile'
        required: false
        type: string
      build_arg:
        description: 'Build Arg string for Docker Build command'
        default: ''
        required: false
        type: string
      # Support for Base_Image Builds
      base_image_build:
        description: 'Determines whether a Base_Image needs to be created.'
        default: false
        required: false
        type: boolean
      base_dockerbuild_path: 
        description: 'The path of the base docker build.'
        default: '.'
        required: false
        type: string
      base_dockerfile_path: 
        description: 'The path of the base dockerfile.'
        default: '.'
        required: false
        type: string
      base_dockerfile_name:
        description: 'The filename of the base dockerfile.'
        default: 'Dockerfile.base'
        required: false
        type: string
      only_fixed:
        description: 'Set whether to output only vulnerabilities with fixes.'
        default: true
        required: false
        type: boolean
      fail_on_vulns:
        description: 'Set whether the job should fail if vulnerabilities are found. (based on severity_fail_cutoff)'
        default: true
        required: false
        type: boolean
      severity_fail_cutoff:
        description: 'Set the severity level at which the job should fail.'
        default: 'high'
        required: false
        type: string

permissions:
  contents: read

jobs:
  Anchore-Grype-Vulnerability-Scan:
    permissions:
      contents: read  # for actions/checkout to fetch code
    runs-on: ubuntu-latest
    steps:
    - name: Check out the code
      uses: actions/checkout@v4
    - name: Build the Base Docker image
      if: ${{ inputs.base_image_build }}
      run: docker build ${{ inputs.base_dockerbuild_path }} --file ${{ inputs.base_dockerfile_path }}/${{ inputs.base_dockerfile_name}} --tag localbuild/baseimage:latest
    - name: Build the Docker image
      run: docker build ${{ inputs.build_arg }} ${{ inputs.dockerbuild_path }} --file ${{ inputs.dockerfile_path }}/${{ inputs.dockerfile_name }} --tag localbuild/testimage:latest
    - name: Install Anchore Syft
      run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin $SYFT_VERSION
    - name: Install Anchore Grype
      run: curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin $GRYPE_VERSION
    - name: Scan image for Vulnerabilities
      run: |
        mkdir $GRYPE_ARTIFACTS_DIR
        curl -sSfL https://raw.githubusercontent.com/RedHatInsights/platform-security-gh-workflow/master/false_positives/grype-false-positives.yml > grype.yml
        syft -v -o json localbuild/testimage:latest > testimage.json
        grype -v -c grype.yml -o table sbom:testimage.json > $GRYPE_ARTIFACTS_DIR/grype-vuln-results-full-${{ inputs.dockerfile_name }}.txt
        grype -v -c grype.yml -o json sbom:testimage.json > $GRYPE_ARTIFACTS_DIR/grype-vuln-results-full-${{ inputs.dockerfile_name }}.json
        grype -v -c grype.yml -o table --only-fixed sbom:testimage.json > $GRYPE_ARTIFACTS_DIR/grype-vuln-results-fixable-${{ inputs.dockerfile_name }}.txt
        grype -v -c grype.yml -o json --only-fixed sbom:testimage.json > $GRYPE_ARTIFACTS_DIR/grype-vuln-results-fixable-${{ inputs.dockerfile_name }}.json
    - name: Provide Grype Vulnerability Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: grype-vuln-artifacts-${{ inputs.dockerfile_name }}
        path: $GRYPE_ARTIFACTS_DIR
    - name: Grade Container Image (Pass or Fail)
      run: |
        if [ "${{ inputs.fail_on_vulns }}" = true ]; then
          grype -v -c grype.yml --only-fixed --fail-on ${{ inputs.severity_fail_cutoff }} sbom:testimage.json
        else
          echo "Fail on vulnerabilities is set to False. Skipping fail on vulnerabilities."
          grype -v -c grype.yml --only-fixed sbom:testimage.json
        fi

  Anchore-Syft-SBOM-Scan:
    permissions:
      contents: read  # for actions/checkout to fetch code
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v4
    - name: Build the Base Docker image
      if: ${{ inputs.base_image_build }}
      run: docker build ${{ inputs.base_dockerbuild_path }} --file ${{ inputs.base_dockerfile_path }}/${{ inputs.base_dockerfile_name}} --tag localbuild/baseimage:latest
    - name: Build the Docker image
      run: docker build ${{ inputs.build_arg }} ${{ inputs.dockerbuild_path }} --file ${{ inputs.dockerfile_path }}/${{ inputs.dockerfile_name }} --tag localbuild/testimage:latest
    - name: Install Anchore Syft
      run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin $SYFT_VERSION
    - name: Scan the image and generate SBOM
      run: |
        mkdir $SYFT_ARTIFACTS_DIR
        syft -v -o table localbuild/testimage:latest > $SYFT_ARTIFACTS_DIR/syft-sbom-results-${{ inputs.dockerfile_name }}.txt
        syft -v -o syft-json localbuild/testimage:latest > $SYFT_ARTIFACTS_DIR/syft-sbom-results-${{ inputs.dockerfile_name }}.json
    - name: Provide Syft SBOM Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: syft-sbom-artifacts-${{ inputs.dockerfile_name }}
        path: $SYFT_ARTIFACTS_DIR
